plugins {
    id 'com.diffplug.spotless' version '7.0.0.BETA1'
    id 'fabric-loom' version '1.7-SNAPSHOT' apply false
    id 'net.neoforged.moddev' version '0.1.108' apply false
}

spotless {
    java {
        target "*/src/*/java/de/wonejo/gapi/**/*.java"

        cleanthat()
        endWithNewline()
        trimTrailingWhitespace()
        removeUnusedImports()
        formatAnnotations()
    }
}

subprojects.forEach {
    it.tasks.withType(ProcessResources).configureEach {
        var replaceProperties = [
                mc_version:  mc_version, pack_format: pack_format,
                neo_version: neo_version, neo_range: neo_version_range, neo_loader_range: neo_loader_range,
                fabric_loader: fabric_loader, fabric_api: fabric_api,

                mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_authors: mod_authors, mod_description: mod_description, mod_version: mod_version
        ]
        inputs.properties replaceProperties

        filesMatching (["META-INF/neoforge.mods.toml", "fabric.mod.json", "pack.mcmeta"]) {
            expand replaceProperties
        }
    }

    it.tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }

    it.tasks.withType(JavaCompile).configureEach {
        options.encoding='UTF-8'
        options.release=21
    }

    it.tasks.withType(AbstractArchiveTask).configureEach {
        setPreserveFileTimestamps(false)
        setReproducibleFileOrder(true)
    }
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}