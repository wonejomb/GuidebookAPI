plugins {
    id 'com.diffplug.spotless' version '6.25.0'
    id 'com.dorongold.task-tree' version '4.0.0'
    id 'fabric-loom' version "1.7-SNAPSHOT" apply false
    id 'net.neoforged.moddev' version '2.0.26-beta' apply false
    id 'me.modmuss50.mod-publish-plugin' version '0.7.2' apply false
    id 'net.minecraftforge.gradle' version '6.+' apply false
    id 'org.parchmentmc.librarian.forgegradle' version '1.2.0' apply false
}

repositories {
    mavenCentral()
}

spotless {
    java {
        target "**/src/main/**/de/wonejo/wuidebook/**/*.java"

        removeUnusedImports ()
        formatAnnotations ()
    }
}

subprojects {
    tasks.withType(AbstractArchiveTask).configureEach {
        setPreserveFileTimestamps(false)
        setReproducibleFileOrder(true)
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
        options.release = 21
    }

    tasks.withType(Javadoc).configureEach {
        def docletOptions = options as StandardJavadocDocletOptions
        docletOptions.addStringOption("Xdoclint:none", "-quiet")
    }

    tasks.withType(Jar).configureEach {
        manifest {
            var jarAttributes =
                    ["Specification-Title": modName,
                    "Specification-Vendor": modAuthor,
                    "Specification-Version": modVersion,
                    "Implementation-Title": name,
                    "Implementation-Version": archiveVersion,
                    "Implementation-Vendor": modAuthor]

            attributes(jarAttributes)
        }
    }

    tasks.withType(ProcessResources).configureEach {
        var replaceProperties = [
                modId: modId, modName: modName, modVersion: modVersion, modAuthor: modAuthor, modDescription: modDescription, modLicense: modLicense,

                forgeVersion: forgeVersion, forgeRange: forgeRange,
                neoVersion: neoVersion, neoRange: neoRange, neoLoader: neoLoader,
                fabricApi: fabricApi, fabricLoader: fabricLoader
        ]
        inputs.properties replaceProperties

        filesMatching(["META-INF/neoforge.mods.toml", "META-INF/mods.toml", "fabric.mod.json", "pack.mcmeta"]) {
            expand replaceProperties
        }
    }

}